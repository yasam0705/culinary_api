definitions:
  models.CookingSteps:
    properties:
      cooking_time:
        type: number
      description:
        type: string
      guid:
        type: string
      order_number:
        type: integer
      recipe_id:
        type: string
    type: object
  models.CookingStepsUpdate:
    properties:
      cooking_time:
        type: number
      description:
        type: string
      guid:
        type: string
      order_number:
        type: integer
      recipe_id:
        type: string
    type: object
  models.CreateAggregatorRequest:
    properties:
      cooking_steps:
        items:
          $ref: '#/definitions/models.CreateCookingStepsRequest'
        type: array
      ingredients:
        items:
          $ref: '#/definitions/models.CreateIngredientsRequest'
        type: array
      recipe:
        $ref: '#/definitions/models.CreateRecipeRequest'
    type: object
  models.CreateAggregatorResponse:
    properties:
      guid:
        type: string
    type: object
  models.CreateCookingStepsRequest:
    properties:
      cooking_time:
        type: number
      description:
        type: string
      order_number:
        type: integer
    type: object
  models.CreateIngredientRequest:
    properties:
      count:
        type: number
      dimension:
        type: string
      name:
        type: string
      recipe_id:
        type: string
    type: object
  models.CreateIngredientResponse:
    properties:
      guid:
        type: string
    type: object
  models.CreateIngredientsRequest:
    properties:
      count:
        type: number
      dimension:
        type: string
      name:
        type: string
    type: object
  models.CreateRecipeRequest:
    properties:
      description:
        type: string
      title:
        type: string
    type: object
  models.CreateStepRequest:
    properties:
      cooking_time:
        type: number
      description:
        type: string
      order_number:
        type: integer
      recipe_id:
        type: string
    type: object
  models.CreateStepResponse:
    properties:
      guid:
        type: string
    type: object
  models.CulinaryAggregator:
    properties:
      cooking_steps:
        items:
          $ref: '#/definitions/models.CookingSteps'
        type: array
      ingredients:
        items:
          $ref: '#/definitions/models.Ingredients'
        type: array
      recipe:
        $ref: '#/definitions/models.Recipe'
    type: object
  models.DeleteIngredientResponse:
    properties:
      success:
        type: boolean
    type: object
  models.DeleteRecipeResponse:
    properties:
      succress:
        type: boolean
    type: object
  models.DeleteStepResponse:
    properties:
      success:
        type: boolean
    type: object
  models.ErrorBadRequest:
    properties:
      error_code:
        type: integer
      message:
        type: string
    type: object
  models.Ingredients:
    properties:
      count:
        type: number
      dimension:
        type: string
      guid:
        type: string
      name:
        type: string
    type: object
  models.IngredientsUpdate:
    properties:
      count:
        type: number
      dimension:
        type: string
      guid:
        type: string
      name:
        type: string
    type: object
  models.Ingridient:
    properties:
      dimension:
        type: string
      guid:
        type: string
      name:
        type: string
    type: object
  models.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  models.LoginResponse:
    properties:
      access_token:
        type: string
      access_token_ttl:
        type: integer
      refresh_token:
        type: string
      refresh_token_ttl:
        type: integer
    type: object
  models.Recipe:
    properties:
      cooking_time:
        type: number
      created_at:
        type: string
      description:
        type: string
      guid:
        type: string
      number_of_ratings:
        type: integer
      overall_rating:
        type: number
      rating:
        type: integer
      title:
        type: string
      updated_at:
        type: string
    type: object
  models.RecipeRatingRequest:
    properties:
      rating:
        type: integer
      recipe_id:
        type: string
    type: object
  models.RecipeRatingResponse:
    properties:
      succress:
        type: boolean
    type: object
  models.RecipeUpdate:
    properties:
      description:
        type: string
      guid:
        type: string
      title:
        type: string
    type: object
  models.RegistrationRequest:
    properties:
      password:
        type: string
      retry_password:
        type: string
      username:
        type: string
    type: object
  models.RegistrationResponse:
    properties:
      guid:
        type: string
    type: object
  models.UpdateIngredientRequest:
    properties:
      count:
        type: number
      dimension:
        type: string
      guid:
        type: string
      name:
        type: string
      recipe_id:
        type: string
    type: object
  models.UpdateIngredientResponse:
    properties:
      success:
        type: boolean
    type: object
  models.UpdateRecipeRequest:
    properties:
      cooking_steps:
        items:
          $ref: '#/definitions/models.CookingStepsUpdate'
        type: array
      ingredients:
        items:
          $ref: '#/definitions/models.IngredientsUpdate'
        type: array
      recipe:
        $ref: '#/definitions/models.RecipeUpdate'
    type: object
  models.UpdateRecipeResponse:
    properties:
      succress:
        type: boolean
    type: object
  models.UpdateStepRequest:
    properties:
      cooking_time:
        type: number
      description:
        type: string
      guid:
        type: string
      order_number:
        type: integer
      recipe_id:
        type: string
    type: object
  models.UpdateStepResponse:
    properties:
      success:
        type: boolean
    type: object
info:
  contact: {}
paths:
  /v1/auth/login:
    post:
      consumes:
      - application/json
      description: Registration user
      parameters:
      - description: data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorBadRequest'
      security:
      - ApiKeyAuth: []
      summary: Registration user
      tags:
      - auth
  /v1/auth/registration:
    post:
      consumes:
      - application/json
      description: Registration user
      parameters:
      - description: data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.RegistrationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.RegistrationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorBadRequest'
      security:
      - ApiKeyAuth: []
      summary: Registration user
      tags:
      - auth
  /v1/cooking-step:
    post:
      consumes:
      - application/json
      description: Create cooking step
      parameters:
      - description: data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.CreateStepRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CreateStepResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorBadRequest'
      security:
      - ApiKeyAuth: []
      summary: Create cooking step
      tags:
      - cooking-step
    put:
      consumes:
      - application/json
      description: Update cooking step
      parameters:
      - description: data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.UpdateStepRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UpdateStepResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorBadRequest'
      security:
      - ApiKeyAuth: []
      summary: Update cooking step
      tags:
      - cooking-step
  /v1/cooking-step/{id}:
    delete:
      consumes:
      - application/json
      description: Delete cooking step by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.DeleteStepResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorBadRequest'
      security:
      - ApiKeyAuth: []
      summary: Delete cooking step by id
      tags:
      - cooking-step
  /v1/recipe:
    get:
      consumes:
      - application/json
      description: Recipe List
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      - description: cooking_time_from
        in: query
        name: cooking_time_from
        type: string
      - description: cooking_time_to
        in: query
        name: cooking_time_to
        type: string
      - description: guid,guid
        in: query
        name: ingridients
        type: string
      - description: rating_from
        in: query
        name: rating_from
        type: number
      - description: rating_to
        in: query
        name: rating_to
        type: number
      - description: order_rating
        in: query
        name: order_rating
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Recipe'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorBadRequest'
      summary: Recipe List
      tags:
      - aggregator
    post:
      consumes:
      - application/json
      description: Create recipe
      parameters:
      - description: data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.CreateAggregatorRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CreateAggregatorResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorBadRequest'
      security:
      - ApiKeyAuth: []
      summary: Create recipe
      tags:
      - aggregator
    put:
      consumes:
      - application/json
      description: Update recipe
      parameters:
      - description: data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.UpdateRecipeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UpdateRecipeResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorBadRequest'
      security:
      - ApiKeyAuth: []
      summary: Update recipe
      tags:
      - aggregator
  /v1/recipe-ingridient:
    delete:
      consumes:
      - application/json
      description: Delete ingridient by id
      parameters:
      - description: recipe_id
        in: query
        name: recipe_id
        required: true
        type: string
      - description: ingredient_id
        in: query
        name: ingredient_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.DeleteIngredientResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorBadRequest'
      security:
      - ApiKeyAuth: []
      summary: Delete ingridient by id
      tags:
      - recipe-ingridient
    get:
      consumes:
      - application/json
      description: ingridient list
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Ingridient'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorBadRequest'
      summary: ingridient list
      tags:
      - recipe-ingridient
    post:
      consumes:
      - application/json
      description: Create ingridient
      parameters:
      - description: data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.CreateIngredientRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CreateIngredientResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorBadRequest'
      security:
      - ApiKeyAuth: []
      summary: Create ingridient
      tags:
      - recipe-ingridient
    put:
      consumes:
      - application/json
      description: Update ingridient
      parameters:
      - description: data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.UpdateIngredientRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UpdateIngredientResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorBadRequest'
      security:
      - ApiKeyAuth: []
      summary: Update ingridient
      tags:
      - recipe-ingridient
  /v1/recipe/{id}:
    delete:
      consumes:
      - application/json
      description: Delete recipe by id
      parameters:
      - description: recipe_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.DeleteRecipeResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorBadRequest'
      security:
      - ApiKeyAuth: []
      summary: Delete recipe by id
      tags:
      - aggregator
    get:
      consumes:
      - application/json
      description: Recipe by id
      parameters:
      - description: recipe_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.CulinaryAggregator'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorBadRequest'
      summary: Recipe by id
      tags:
      - aggregator
  /v1/recipe/rating:
    post:
      consumes:
      - application/json
      description: Recipe rating
      parameters:
      - description: data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.RecipeRatingRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.RecipeRatingResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorBadRequest'
      security:
      - ApiKeyAuth: []
      summary: Recipe rating
      tags:
      - rating
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
